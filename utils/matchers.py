import os
import re
import pymorphy2
import yaml

morph = pymorphy2.MorphAnalyzer()
with open(os.path.join(os.path.dirname(__file__), 're_mat.yaml'), 'r', encoding='utf-8') as f:
    obscenities = yaml.safe_load(f)


POSITIVE = re.compile(
    '((–±—ã–ª–æ|–≤–∞—â–µ|—Å—É–ø–µ—Ä|–≤—Å[–µ—ë]) )*'
    '(—Ö–æ—Ä–æ—à–æ|–æ—Ç–ª–∏—á–Ω–æ|—á[–µ—ë]—Ç–∫–æ|[–∞–æ]—Ö—É–µ–Ω–Ω–æ|–∫–ª–∞—Å—Å–Ω–æ|–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ|–∫–∞–π—Ñ|–∫–ª–∞—Å—Å|—Å—É–ø–µ—Ä|–æ–≥–æ–Ω—å|–æ—Ñ–∏–≥–µ–Ω–Ω–æ|—Ç–æ–ø–æ–≤–æ)'
)


def inflect_first_word(text, case):
    words = text.split()
    first_word = morph.parse(words[0])[0].inflect({case}).word
    return ' '.join([first_word] + words[1:])


def fast_normalize(text):
    text = re.sub('[^a-z–∞-—è—ë0-9]+', ' ', text.lower())
    text = re.sub('\\s+', ' ', text).strip()
    text = re.sub('—ë', '–µ', text)
    return text


def is_like_telegram_login(text):
    return bool(re.match('[a-z0-9_]{5,}', text))


def is_like_yes(text):
    return bool(re.match('–¥–∞|–∞–≥–∞|–∫–æ–Ω–µ—á–Ω–æ|yes|–µ—Å', text))


def is_like_no(text):
    return bool(re.match('–Ω–µ—Ç|no|nope', text))


def normalize_username(username):
    if not isinstance(username, str):
        return username
    if username is not None:
        username = username.lower().strip().strip('@')
        for prefix in ['https://t.me/', 't.me/']:
            if username.startswith(prefix):
                username = username[len(prefix):]
        return username
    return None


assert normalize_username(' https://t.me/KOTIK   ') == 'kotik'


def is_obscene(text):
    for word in text.split():
        for pattern in obscenities:
            if re.match(pattern, word):
                return True
    return False


def like_positive_feedback(text):
    return re.match(POSITIVE, text)


def like_did_not_meet(text):
    if re.match('(.+ )?–Ω–µ (–±—ã–ª–æ|–ø–∏–ª[–∞–∏]?|–≤–∏–¥–µ–ª–∏—Å—å|–≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å|–≤—Å—Ç—Ä–µ—á–∞–ª(–∏—Å—å|—Å—è|–∞—Å—å)|–ø–æ–ª—É—á–∏–ª–æ—Å—å|–ø—Ä–æ—à–ª–æ)', text):
        return True
    if re.match('(–Ω–∏–∫–∞–∫|–Ω–∏—á–µ–≥–æ –Ω–µ –±—ã–ª–æ)', text):
        return True
    return False


def like_will_meet(text):
    if re.match('.*—Å–ª–µ–¥(—É—é—â..)? –Ω–µ–¥–µ–ª', text):
        return True
    if re.match('.*–∑–∞–≤—Ç—Ä–∞', text):
        return True
    if re.match('.*(–±—É–¥–µ–º –ø–∏—Ç—å|–≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è)', text):
        return True
    if re.match('–ø–µ—Ä–µ–Ω–µ—Å(–ª–∏|—Ç–∏)', text):
        return True
    if '–µ—â–µ' in text.split():
        return True
    return False


def like_positive_emoji(text):
    s = set(text)
    smileys = set('üëçüèºü§ó‚úäüòãüòÇüòÖü§òüî•üëç‚úåÔ∏è')
    return s and s.intersection(smileys)


def like_did_not_agree(text):
    return '–Ω–µ –æ—Ç–≤–µ—Ç–∏–ª' in text or '–Ω–µ –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å' in text
